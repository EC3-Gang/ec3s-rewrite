---
import type { GetStaticPaths, InferGetStaticPropsType } from 'astro';

import BaseLayout from '@components/layouts/BaseLayout.astro';
import Pagination from '@components/Pagination.astro';
import PostList from '@components/PostList.astro';

import { getAllPosts, getUniqueTags, sortPostsByDate } from '@utils/getPosts';

export const getStaticPaths = (async ({ paginate }) => {
	const posts = await getAllPosts();
	const sortedPosts = sortPostsByDate(posts);
	const uniqueTags = getUniqueTags(sortedPosts);

	return uniqueTags.flatMap((tag) => {
		const filteredPosts = sortedPosts.filter((post) =>
			post.data.tags.includes(tag),
		);

		return paginate(filteredPosts, {
			pageSize: 10,
			params: {
				tag,
			},
			props: {
				uniqueTags,
			},
		});
	});
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { page, uniqueTags } = Astro.props;
const { tag } = Astro.params;

const paginateProps = {
	nextUrl: page.url.next,
	prevUrl: page.url.prev,
};
---

<BaseLayout
	title={`Posts tagged #${tag}`}
	description='List of posts by HCI ECÂ³'
>
	<div class='mt-36 w-4/5 md:w-3/5 xl:w-1/2 mx-auto'>
		<h2 class='text-4xl font-bold text-center glow'>
			Tags / <span class='italic underline'># {tag}</span>
		</h2>
		<div class='grid grid-cols-1 md:grid-cols-3 gap-8 mt-12'>
			<div class='col-span-2'>
				<PostList posts={page.data} />
				<Pagination {paginateProps} />
			</div>
			<div>
				<h2 class='text-2xl glow'>Tags</h2>
				<div class='mt-2'>
					{
						uniqueTags.map((tag) => (
							<p>
								<a href={`/tags/${tag}`} class='tag underline italic'>
									# {tag}
								</a>
							</p>
						))
					}
				</div>
			</div>
		</div>
	</div>
</BaseLayout>
